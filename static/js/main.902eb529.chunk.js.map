{"version":3,"sources":["components/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","findTab","find","tab","id","className","map","classnames","href","onClick","title","content","App","useState","setSelectedTabId","tabId","ReactDOM","render","document","getElementById"],"mappings":"sMAUaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAUH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAE5C,OACE,sBAAKM,UAAU,MAAf,UACE,qBAAKA,UAAU,wDAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBAEEE,UAAWE,IAAW,CACpB,YAAaJ,EAAIC,KAAOL,IAH5B,SAME,mBACES,KAAK,KACLC,QAAS,WACHN,EAAIC,KAAOL,GACbC,EAAcG,EAAIC,KAJxB,SAQGD,EAAIO,SAbFP,EAAIC,WAoBjB,qBAAKC,UAAU,kBAAf,SACE,mBAAGA,UAAU,6BAA6B,UAAQ,cAAlD,gBACGJ,QADH,IACGA,OADH,EACGA,EAASU,gBCvCPb,G,MAAc,CACzB,CAAEM,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,iBA0B3BC,EAvBO,WACpB,MAA0CC,mBAAS,SAAnD,mBAAOd,EAAP,KAAsBe,EAAtB,KAMMb,EAAUH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAE5C,OACE,sBAAKM,UAAU,6DAAf,UACE,oBAAIA,UAAU,aAAd,0CACsBJ,QADtB,IACsBA,OADtB,EACsBA,EAASS,SAE/B,cAAC,EAAD,CACEZ,KAAMA,EACNC,cAAeA,EACfC,cAdgB,SAACe,GAAD,OACpBD,EAAiBC,UCZrBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.902eb529.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { Tab } from '../react-app-env';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tabId: string) => void,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const findTab = tabs.find(tab => tab.id === selectedTabId);\n\n  return (\n    <div className=\"box\">\n      <div className=\"tabs is-centered is-toggle is-toggle-rounded is-large\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={classnames({\n                'is-active': tab.id === selectedTabId,\n              })}\n            >\n              <a\n                href=\"#t\"\n                onClick={() => {\n                  if (tab.id !== selectedTabId) {\n                    onTabSelected(tab.id);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"message is-link\">\n        <p className=\"message-body subtitle is-3\" data-cy=\"tab-content\">\n          {findTab?.content}\n        </p>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Tab } from './react-app-env';\nimport { Tabs } from './components/Tabs';\n\nimport './App.scss';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n\n  const onTabSelected = (tabId: string): void => (\n    setSelectedTabId(tabId)\n  );\n\n  const findTab = tabs.find(tab => tab.id === selectedTabId);\n\n  return (\n    <div className=\"App has-text-centered column is-half is-offset-one-quarter\">\n      <h1 className=\"title is-2\">\n        {`Selected tab is ${findTab?.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.min.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}